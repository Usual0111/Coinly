// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–æ–±—ä—è–≤–ª—è–µ–º –æ–¥–∏–Ω —Ä–∞–∑)
let scrollPosition = 0;
let currentStep = 0; // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞ –≤ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ
let projectsShown = 0;
let clickCount = 0;
let steps = []; // –ë—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —à–∞–≥–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ (NodeList)

// –õ–∞–π—Ç–±–æ–∫—Å
function openLightbox(src) {
  const img = document.getElementById("lightbox-img");
  const lightbox = document.getElementById("lightbox");
  if (img && lightbox) {
    img.src = src;
    lightbox.classList.add("active");
  }
}

function closeLightbox() {
  const lightbox = document.getElementById("lightbox");
  if (lightbox) lightbox.classList.remove("active");
}

// –ì–∞–π–¥ (–ú–æ–±–∏–ª—å–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ)
function openGuideModal() {
  const modal = document.getElementById("guideModal");
  if (modal) modal.classList.add("active");
}

function closeGuideModal() {
  const modal = document.getElementById("guideModal");
  if (modal) modal.classList.remove("active");
  scrollToAirdropsSection(); // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω—É–∂–Ω–æ–º—É –±–ª–æ–∫—É –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è
}

function scrollToAirdropsSection() {
  const airdropsSection = document.getElementById("airdrops");
  if (airdropsSection) {
    airdropsSection.scrollIntoView({ behavior: "smooth" });
  }
}

// –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
function toggleMenu() {
  const navLinks = document.getElementById("nav-links"); // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
  if (navLinks) navLinks.classList.toggle("show");
}

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ ‚Äî –∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ
function setupModalEvents() {
  window.onclick = function(event) {
    ["lightbox", "guideModal", "task-modal", "email-modal", "onboarding"].forEach(id => {
      const modal = document.getElementById(id);
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º, –µ—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–æ –æ–≤–µ—Ä–ª–µ—é –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      if (event.target === modal) {
        modal?.classList.remove("active");
      }
    });
  };
}

// Onboarding (–ü—Ä–æ—Ü–µ—Å—Å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏)
function startOnboarding() {
  const onboardingModal = document.getElementById('onboarding');
  if (onboardingModal) {
    onboardingModal.classList.add('active');
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º NodeList —à–∞–≥–æ–≤ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
    steps = document.querySelectorAll('#onboarding .step');
    if (steps.length > 0) {
      showStep(0);
    } else {
      console.error("Onboarding steps not found inside #onboarding element.");
    }
  }
}

function closeOnboarding() {
  const onboardingModal = document.getElementById('onboarding');
  if (onboardingModal) {
    onboardingModal.classList.remove('active');
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —à–∞–≥–∏, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
    if (steps && steps.length > 0) {
      steps.forEach(step => step.classList.remove('active'));
    } else {
      // –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –µ—Å–ª–∏ `steps` –Ω–µ –±—ã–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω
      document.querySelectorAll('#onboarding .step').forEach(s => s.classList.remove('active'));
    }
    currentStep = 0;
  }
}

function showStep(stepIndex) {
  // `steps` –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å NodeList —à–∞–≥–æ–≤ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≤ startOnboarding
  if (!steps || steps.length === 0) {
    console.error("Onboarding steps not available in showStep.");
    return;
  }
  steps.forEach(step => step.classList.remove('active'));
  if (steps[stepIndex]) {
    steps[stepIndex].classList.add('active');
    currentStep = stepIndex;
  }
}

function nextStep() {
  // `steps` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤ startOnboarding
  if (steps && currentStep < steps.length - 1) {
    showStep(currentStep + 1);
  }
}

function prevStep() {
  if (currentStep > 0) {
    showStep(currentStep - 1);
  }
}

// Task Modal (–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–¥–∞—á–∏)
function openTask(taskId) {
  scrollPosition = window.pageYOffset || document.documentElement.scrollTop;
  const taskModal = document.getElementById('task-modal');
  const taskContent = document.getElementById('task-content');

  if (!taskModal || !taskContent) {
    console.error("Task modal or task content element not found.");
    return false;
  }

  if (typeof projects !== 'undefined') {
    const project = projects.find(p => p.taskId === taskId);
    if (project && project.instructions) {
      taskContent.innerHTML = `
        <h2>${project.instructions.title}</h2>
        <p>${project.instructions.description}</p>
        <ol class="task-steps">${project.instructions.steps.map(step => `<li>${step}</li>`).join('')}</ol>
        <div class="task-buttons">
          <a href="${project.instructions.actionUrl}" target="_blank" class="btn-primary">${project.instructions.actionText}</a>
          <button class="btn-secondary" onclick="showWalletHelp()">Need a Wallet?</button>
        </div>`;
    } else {
      taskContent.innerHTML = `<p>Task details not available for ID: ${taskId}</p>`;
    }
  } else {
    taskContent.innerHTML = `<p>Project data is not defined. Cannot open task.</p>`;
    console.error("Projects array is not defined.");
  }

  taskModal.classList.add('active');
  return false; // –ü–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ <a> href="#"
}

function closeTaskModal() {
  const taskModal = document.getElementById('task-modal');
  if (taskModal) taskModal.classList.remove('active');
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  setTimeout(() => window.scrollTo(0, scrollPosition), 10);
}

function showWalletHelp() {
  closeTaskModal();
  startOnboarding(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –¥–ª—è –ø–æ–º–æ—â–∏ —Å –∫–æ—à–µ–ª—å–∫–æ–º
}

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
function copyReferralLink() {
  const referralInput = document.querySelector('.referral-link input'); // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (referralInput) {
    referralInput.select();
    referralInput.setSelectionRange(0, 99999); // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    try {
      document.execCommand('copy');
      alert('Referral link copied to clipboard!');
    } catch (err) {
      console.error('Error copying referral link:', err);
      alert('Failed to copy. Please copy manually.');
    }
  }
}

// Project Cards (–ö–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤)
function initializeProjects() {
  if (typeof projects === 'undefined' || projects.length === 0) {
    console.error("Projects array is not defined or empty. Cannot initialize project cards.");
    const container = document.getElementById('project-cards');
    if(container) container.innerHTML = "<p>No projects to display.</p>";
    const showMoreBtn = document.getElementById('show-more-btn');
    if(showMoreBtn) showMoreBtn.style.display = 'none';
    return;
  }
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π
  projectsShown = 0;
  clickCount = 0;
  // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∫–∞—Ä—Ç–æ—á–µ–∫ (–µ—Å–ª–∏ —ç—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è)
  const container = document.getElementById('project-cards');
  if(container) container.innerHTML = '';

  showMoreProjects(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –ø–æ—Ä—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–æ–≤
}

function createProjectCard(project) {
  const card = document.createElement('div');
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–π –∫–ª–∞—Å—Å 'project-card' –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
  card.className = 'offer-card project-card';

  card.innerHTML = `
    <div class="offer-header">
      <div class="logo">${project.icon}</div>
      <div class="offer-title">
        <h3>${project.name}</h3>
        <p>${project.description}</p>
      </div>
      ${project.hot ? `<div class="badge"><span class="badge-tag">üî• HOT</span></div>` : ""}
    </div>
    <p class="reward-range">${project.reward}</p>
    <button class="btn-primary join-btn">${project.btnText || 'Join Now'}</button>
  `;
  // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∫ –∫–Ω–æ–ø–∫–µ —á–µ—Ä–µ–∑ JS, –∞ –Ω–µ data-task-id + querySelector –≤ openTask
  card.querySelector(".join-btn").onclick = () => openTask(project.taskId);
  return card;
}

function showMoreProjects() {
  const container = document.getElementById('project-cards');
  const showMoreBtn = document.getElementById('show-more-btn');
  const infoText = document.getElementById('info-text');
  const actionButtons = document.getElementById('action-buttons');

  if (!container) {
    console.error("Project cards container not found.");
    return;
  }
  if (typeof projects === 'undefined') {
    console.error("Projects array is not defined in showMoreProjects.");
    return;
  }

  if (projectsShown > 0) { // –ù–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º clickCount –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ (projectsShown === 0)
      clickCount++;
  }

  const start = projectsShown;
  const end = Math.min(start + 3, projects.length);

  for (let i = start; i < end; i++) {
    const card = createProjectCard(projects[i]);
    // –ö–ª–∞—Å—Å hidden-project –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –ª–æ–≥–∏–∫–µ `showMoreProjects` –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    // –ï—Å–ª–∏ –æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è –¥—Ä—É–≥–æ–π –ª–æ–≥–∏–∫–∏ "–ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å–∫—Ä—ã—Ç—ã–µ", —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ.
    // if (i >= 3) card.classList.add('hidden-project'); // –£–¥–∞–ª–µ–Ω–æ, —Ç.–∫. –ø–∞–≥–∏–Ω–∞—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–∞—á–µ
    container.appendChild(card);
    projectsShown++;
  }

  if (infoText && clickCount === 2) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –∫–ª–∏–∫–∞ –Ω–∞ "–ø–æ–∫–∞–∑–∞—Ç—å –µ—â–µ"
    infoText.style.display = 'block';
  }

  if (projectsShown >= projects.length) {
    if (showMoreBtn) showMoreBtn.style.display = 'none';
    if (actionButtons) actionButtons.style.display = 'flex'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ–≥–¥–∞ –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã
  } else if (showMoreBtn) {
    showMoreBtn.style.display = 'inline-block'; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –≤–∏–¥–∏–º–∞
    const remaining = Math.min(3, projects.length - projectsShown);
    showMoreBtn.textContent = `üîΩ Show ${remaining} More Projects`;
  }
}

// Email Modal (–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è Email)
function openEmailForm() {
  const modal = document.getElementById('email-modal');
  if (modal) modal.classList.add('active');
}

function closeEmailModal() {
  const modal = document.getElementById('email-modal');
  if (modal) modal.classList.remove('active');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function initEventHandlers() {
  // –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
  const menuButton = document.getElementById('menu-toggle-button');
  const navLinks = document.getElementById('nav-links');
  if (menuButton && navLinks) {
    if (window.innerWidth > 768) {
      menuButton.style.display = 'none';
    } else {
      menuButton.style.display = 'block';
    }
    menuButton.addEventListener('click', toggleMenu);

    window.addEventListener('resize', function() {
      if (window.innerWidth > 768) {
        menuButton.style.display = 'none';
        navLinks.classList.remove('show');
      } else {
        menuButton.style.display = 'block';
      }
    });
  }
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –º–µ–Ω—é, –µ—Å–ª–∏ –µ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–Ω–æ–ø–∫–∏ –≤–Ω—É—Ç—Ä–∏ —Å–∞–º–æ–≥–æ –º–µ–Ω—é –¥–ª—è –µ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è)
  document.querySelectorAll(".menu-toggle").forEach(btn => {
      if (btn.id !== 'menu-toggle-button') { // –ß—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
          btn.addEventListener("click", toggleMenu);
      }
  });


  // –ö–Ω–æ–ø–∫–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
  document.querySelectorAll('#onboarding .next-btn').forEach(btn => btn.addEventListener('click', nextStep));
  document.querySelectorAll('#onboarding .prev-btn').forEach(btn => btn.addEventListener('click', prevStep));
  document.querySelector('#onboarding .done-btn')?.addEventListener('click', function() {
    closeOnboarding();
    scrollToAirdropsSection();
  });

  // –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ –ø—Ä–æ–µ–∫—Ç—ã"
  // HTML: <button id="show-more-btn" ... onclick="showMoreProjects()">...
  // –ï—Å–ª–∏ onclick –∞—Ç—Ä–∏–±—É—Ç —É–±—Ä–∞–Ω –∏–∑ HTML, —ç—Ç–æ—Ç —Å–ª—É—à–∞—Ç–µ–ª—å –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. –ï—Å–ª–∏ onclick –µ—Å—Ç—å, –æ–Ω —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø–µ—Ä–≤—ã–º.
  // –î–ª—è —á–∏—Å—Ç–æ—Ç—ã –ª—É—á—à–µ —É–±—Ä–∞—Ç—å onclick –∏–∑ HTML –∏ –ø–æ–ª–∞–≥–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —ç—Ç–æ—Ç —Å–ª—É—à–∞—Ç–µ–ª—å.
  const showMoreProjectsBtn = document.getElementById('show-more-btn');
  if (showMoreProjectsBtn && !showMoreProjectsBtn.hasAttribute('onclick')) { // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç onclick
      showMoreProjectsBtn.addEventListener('click', showMoreProjects);
  }


  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ data-–∞—Ç—Ä–∏–±—É—Ç—É (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
  document.querySelectorAll('[data-modal]').forEach(btn => {
    btn.addEventListener('click', function () {
      const modalId = this.getAttribute('data-modal');
      const modal = document.getElementById(modalId);
      if (modal) modal.classList.add('active');
    });
  });

  // –û–±—â–∏–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
  document.querySelectorAll('.close-btn, .modal .close').forEach(btn => {
    btn.addEventListener('click', function () {
      const modal = this.closest('.modal');
      if (modal) {
        modal.classList.remove('active');
        // –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≥–∞–π–¥–∞, –∏ –æ–Ω–æ –±—ã–ª–æ –∑–∞–∫—Ä—ã—Ç–æ –æ–±—â–µ–π –∫–Ω–æ–ø–∫–æ–π,
        // –∞ –Ω–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π onclick="closeGuideModal()", —Ç–æ —Ç–∞–∫–∂–µ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º.
        if (modal.id === 'guideModal') {
            // scrollToAirdropsSection(); // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –≤—Å–µ–≥–¥–∞ —Å–∫—Ä–æ–ª–ª–∏—Ç—å –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ guideModal
                                        // –í HTML —É–∂–µ –µ—Å—Ç—å onclick="closeGuideModal()", –∫–æ—Ç–æ—Ä–∞—è —ç—Ç–æ –¥–µ–ª–∞–µ—Ç.
        }
      }
    });
  });

  // –§–æ—Ä–º–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ Email
  const emailForm = document.querySelector('#email-modal .email-form'); // –£—Ç–æ—á–Ω–µ–Ω–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä
  if (emailForm) {
    emailForm.addEventListener('submit', function(e) {
      e.preventDefault();
      const emailInput = emailForm.querySelector('input[type="email"]');
      if (emailInput && emailInput.value) {
         // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, fetch POST-–∑–∞–ø—Ä–æ—Å
        console.log("Email for subscription:", emailInput.value);
        alert('Subscription successful! You will receive alerts about top-paying nodes.'); // –ó–∞–≥–ª—É—à–∫–∞
        emailInput.value = ''; // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è
        closeEmailModal();
      } else {
        alert('Please enter a valid email address.');
      }
    });
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –∏—Ö –∫–æ–Ω—Ç–µ–Ω—Ç–Ω–æ–π —á–∞—Å—Ç–∏
  setupModalEvents();
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ–π –ª–æ–≥–∏–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener("DOMContentLoaded", function () {
  // `projects` –º–∞—Å—Å–∏–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ HTML –≤ inline <script> —Ç–µ–≥–µ –ü–ï–†–ï–î —ç—Ç–∏–º —Ñ–∞–π–ª–æ–º.
  if (typeof projects !== 'undefined' && projects.length > 0) {
    initializeProjects(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
  } else {
    console.warn("Projects array is not defined or is empty. No project cards will be displayed.");
    const container = document.getElementById('project-cards');
    if(container) container.innerHTML = "<p>No projects to display at the moment.</p>";
    const showMoreBtn = document.getElementById('show-more-btn');
    if(showMoreBtn) showMoreBtn.style.display = 'none'; // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É "–ø–æ–∫–∞–∑–∞—Ç—å –µ—â–µ", –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–µ—Ç
  }

  initEventHandlers(); // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
});
